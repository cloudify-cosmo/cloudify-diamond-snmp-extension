tosca_definitions_version: cloudify_dsl_1_0


node_types:

  SNMPProxy:
    derived_from: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create: scripts/install_requirements.sh
      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors
          inputs:
            collectors_config:
              default:
                SNMPProxyCollector:
                  path: collectors/snmpproxy.py
                  config: { get_attribute: [SELF, snmp_collector_config] }

  SnmpdConfiguringNode:
    derived_from: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/setup_snmpd.sh

  SNMPManagerProxy:
    derived_from: cloudify.nodes.Compute # "fake compute"
    properties:
      install_agent:
        default: false
      diamond_config:
        default:
          interval: 1
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          executor: central_deployment_agent
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
              default: { get_property: [SELF, diamond_config] }
        start:
          executor: central_deployment_agent
          implementation: diamond.diamond_agent.tasks.start
        stop:
          executor: central_deployment_agent
          implementation: diamond.diamond_agent.tasks.stop
        uninstall:
          executor: central_deployment_agent
          implementation: diamond.diamond_agent.tasks.uninstall

      cloudify.interfaces.lifecycle:
        configure:
          executor: central_deployment_agent
          implementation: scripts/install_requirements.sh

      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors
          executor: central_deployment_agent
          inputs:
            collectors_config:
              default:
                SNMPProxyCollector:
                  path: collectors/snmpproxy.py
                  config: { get_attribute: [SELF, snmp_collector_config ] }

relationships:
  cloudify.relationships.monitors:
    derived_from: cloudify.relationships.depends_on
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: scripts/append_diamond_conf.py
          executor: central_deployment_agent
          inputs:
            port:
              default: 161
              description: snmp port
            community:
              default: public
              description: the community
            oids:
              description: the oids to poll
